module eval/Expressions
imports
  eval/Primitive

strategies

  /**
   * Evaluate expressions bottomup.
   */
  eval-exp =
    bottomup-exp(
         EvalVar
      <+ EvalBinOp
      <+ EvalCond
      <+ debug(!"-- Cannot evaluate expression: ")
         ; fail
    )

  /**
   * Bottomup traversal over expressions.
   */
  bottomup-exp(s) =
       eval-atoms
    <+ eval-primitives(s)
    <+ Assign(ExprName(Id(id)), bottomup-exp(s))
       ; ?Assign(ExprName(Id(var)), <id => value>)
       ; rules( EvalVar.var : ExprName(Id(var)) -> value )
    <+ all(bottomup-exp(s))
       ; s

  /**
   * Do nothing with literals and identifiers.
   */
  eval-atoms =
       ?Lit(_)
    <+ ?Id(_)

signature
  constructors
    Ref : String -> Ref
