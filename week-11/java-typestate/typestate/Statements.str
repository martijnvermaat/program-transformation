module typestate/Statements
imports
  typestate/States
  typestate/Expressions

strategies

  typestate-method-dec =
    {| Typestate :
       MethodDec(typestate-method-head, typestate-method-body)
    |}

  /**
   * todo: look at other childs of MethodDecHead?
   */
  typestate-method-head =
    collect(?Param(_, _, _))
    ; map({ var :
        ?Param(_, _, Id(var))
        ; rules ( Typestate : var -> Dunno )
      })

  typestate-method-body =
    typestate-stm

  typestate-stm =
       typestate-empty-stm
    <+ typestate-block-stm
    <+ typestate-expr-stm
    <+ typestate-local-var-dec-stm
    <+ typestate-if-then-else-stm
    <+ typestate-while-stm
    <+ typestate-labeled-stm
    <+ debug(!"unsupported statement: ")

  /**
   * Do nothing with empty statement.
   */
  typestate-empty-stm =
    ?Empty

  /**
   * Statements in block.
   */
  typestate-block-stm =
    Block( map(typestate-stm) )

  /**
   * Propagate typestate in expression.
   */
  typestate-expr-stm =
    ExprStm(typestate-exp)

  /**
   * Analyse typestate in local variable declaration.
   */
  typestate-local-var-dec-stm =
    LocalVarDecStm(LocalVarDec(id, id, map(typestate-var-dec)))

  /**
   * Simple declaration.
   */
  typestate-var-dec =
    VarDec(Id(?var))
    ; where(typestate-declaration-init => ts)
    ; rules ( Typestate : var -> ts )

  /**
   * Declaration with assignment.
   */
  typestate-var-dec =
    VarDec(Id(?var), typestate-exp => e)
    ; where(
        <typestate-assignment-rule>(
          <typestate-declaration-init>,
          <typestate-of>e
        ) => ts
      )
    ; rules (
        Typestate : var -> ts
      )

  typestate-if-then-else-stm =
    If(typestate-exp, id, id)
    ; merge-Typestate(
        If(id, typestate-stm, id),
        If(id, id, typestate-stm)
      )

  /**
   * todo: make tests for assignment in condition
   *       (condition is always executed)
   * todo: looping body does matter for null annotations
   */
  typestate-while-stm =
    While(typestate-exp, id)
    ; merge-Typestate(id, While(typestate-exp, typestate-stm))

  /**
   * Labeled statement.
   */
  typestate-labeled-stm =
    Labeled(id, typestate-stm)
