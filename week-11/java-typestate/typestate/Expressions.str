module typestate/Expressions
imports
  typestate/States
  typestate/Rules

strategies

  typestate-exp =
    bottomup-exp(
      try(
           TypestateVar
        <+ TypestateLiteral
        <+ OpToCall; TypestateCall; CallToOp
        <+ InvokeToCall; TypestateCall; CallToInvoke
      )
    )

  /**
   * Bottomup traversal over expressions.
   */
  bottomup-exp(s) =
       typestate-var-assignment
    <+ all(bottomup-exp(s))
       ; s

  typestate-var-assignment =
    Assign(ExprName(Id(?var)), typestate-exp => e)
    ; TypestateVarAssignment
    ; where(<typestate-of>e => ts)
    ; rules ( Typestate : var -> Init )


  typestate-of :
    e{t*} -> ts
    where <fetch-elem(?TypeState(<id>))> t* => ts
