module pt2
imports
  Java-15
  libstrategolib


strategies

  main-pt2 =
    io-wrap(exc-11)


strategies

  exc-1 =
       ? If(e, s)
    <+ ? If(e, s1, s2)
    <+ ? While(e, s)
    <+ ? Return(e)

  exc-2 =
       ? If(_,Empty)
    <+ ? If(_, Block([Empty]))
    <+ ? If(_, Block([]))
    <+ ? If(_, Empty ,_)
    <+ ? If(_, Block([Empty]), _)
    <+ ? If(_, Block([]), _)
    <+ ? If(_, _, Empty)
    <+ ? If(_, _, Block([Empty]))
    <+ ? If(_, _, Block([]))

  exc-3 =
       ? Eq(Lit(Bool(True)), _)
    <+ ? Eq(_, Lit(Bool(True)))

  exc-4 =
    try(removeEqTrue)

  exc-5 =
       ? If(_, _)         ; no-block-if
    <+ ? If(_, _, _)      ; no-block-if-else1
    <+ ? If(_, _, _)      ; no-block-if-else2
    <+ ? DoWhile(_, _)    ; no-block-do-while
    <+ ? ForEach(_, _, _) ; no-block-for-each

  exc-6 =
       introBlockIf
    <+ introBlockIfElse1
    <+ introBlockIfElse2
    <+ introBlockDoWhile
    <+ introBlockForEach

  exc-7 =
    ? Assign(a, a)

  exc-8 =
    invertEqualsString

  exc-9 =
    invertIfNot

  exc-10 =
    ? MethodDec(MethodDecHead(_, _, _, _, _, _), Block( <last-from-list> ))

  exc-11 =
    ![3, 2, 1, 2, 3, 1] ; exc-apply-first(\ 1 -> 4 \) 

  exc-12 =
    id

  exc-13 =
    id

  exc-14 =
    id

  exc-15 =
    id


  no-block-if =
    not( ? If(_, Block(_)) )

  no-block-if-else1 =
    not( ? If(_, Block(_), _) )

  no-block-if-else2 =
    not( ? If(_, _, Block(_)) )

  no-block-do-while =
    not( ? DoWhile(Block(_), _) )

  no-block-for-each =
    not( ? ForEach(_, _, Block(_)) )

  last-from-list =
       ? [ e ] ; !e
    <+ ? [ _ | t ] ; <last-from-list>t

  exc-apply-first(s) =
       applyToFirstElement(s)
    <+ ? [ e | t ] ; ! [e | <exc-apply-first(s)>t ]
    <+ fail


rules

  removeEqTrue : Eq(Lit(Bool(True)), e) -> e
  removeEqTrue : Eq(e, Lit(Bool(True))) -> e

  introBlockIf      : If(c, b)         -> If(c, Block([b]))         where(no-block-if)
  introBlockIfElse1 : If(c, i, e)      -> If(c, Block([i]), e)      where(no-block-if-else1)
  introBlockIfElse2 : If(c, i, e)      -> If(c, i, Block([e]))      where(no-block-if-else2)
  introBlockDoWhile : DoWhile(b, c)    -> DoWhile(Block([b]), c)    where(no-block-do-while)
  introBlockForEach : ForEach(p, e, b) -> ForEach(p, e, Block([b])) where(no-block-for-each)

  invertEqualsString :
    Invoke(Method(MethodName(AmbName(o), Id("equals"))), [Lit(String(s))])
    ->
    Invoke(Method(Lit(String(s)), None, Id("equals")), [ExprName(o)])

  invertIfNot : If(c, i, e) -> If(<invertNotEqual>c, e, i) where(<?NotEq(e1, e2)>c)
  invertIfNot : If(c, i, e) -> If(<removeNot>c, e, i) where(<?Not(c1)>c)

  invertNotEqual : NotEq(e1, e2) -> Eq(e1, e2)

  removeNot : Not(e) -> e

  applyToFirstElement(s) : [ e | t ] -> [ <s>e | t ] where(<s>e)
