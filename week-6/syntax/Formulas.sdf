%% Context-free syntax for predicate logic formulas
%%
%% Nullary predicates can be written as P or P()
%% Quantification can be done over variables and predicates

module Formulas

imports
  Lexical


exports

  sorts Form VarList QVar

  context-free syntax

    Pred                         -> Form {cons("Pred")}
    Pred "(" VarList ")"         -> Form {cons("Pred")}

    {Var ","}*                   -> VarList {cons("Varlist")}

    Constant                     -> Form {cons("Constant")}
    "not" Form                   -> Form {cons("Not")}
    Form "/\\" Form              -> Form {left, cons("And")}
    Form "\\/" Form              -> Form {left, cons("Or")}
    Form "<->" Form              -> Form {left, cons("Equiv")}

    "forall" QVar ":" Form       -> Form {cons("Forall")}
    "exists" QVar ":" Form       -> Form {cons("Exists")}

    Var                          -> QVar
    Pred                         -> QVar

    "(" Form ")"                 -> Form {bracket}

  context-free priorities

    "not" Form                   -> Form
    >
    {left:
      Form "/\\" Form            -> Form
      Form "\\/" Form            -> Form
    }
    >
    {left:
      Form "<->" Form            -> Form
    }
    >
    {
    "forall" QVar ":" Form       -> Form
    "exists" QVar ":" Form       -> Form
    }
